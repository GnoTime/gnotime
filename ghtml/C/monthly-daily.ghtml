<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<title>Report</title>
<?scm 
(use-modules (srfi srfi-1) (srfi srfi-19))
(if (equal? (gtt-kvp-str "interval") "daily")
    (begin
        (define report-start (string->number (gtt-kvp-str "start_day")))
        (define one-day (time-difference (make-time time-utc 0 86400) (make-time time-utc 0 0)))
        (define report-end (time-second (add-duration (make-time time-utc 0 report-start) one-day)))
    )
    (if (equal? (gtt-kvp-str "interval") "monthly")
    (begin
        (define report-start (time-second (date->time-utc (string->date (string-append "01 " (gtt-kvp-str "start_month")) "~d ~b ~Y"))))
        (define report-start-date (time-utc->date (make-time time-utc 0 report-start)))
        (define str-next-month (string-append "01 " (number->string (+ (date-month report-start-date) 1)) " " (number->string (date-year report-start-date))))
        (define report-end (time-second (date->time-utc (string->date str-next-month "~d ~m ~Y"))))
    )
    (if (equal? (gtt-kvp-str "interval") "custom")
    (begin
        (define report-start
            (catch #t
                (lambda () (time-second (date->time-utc (string->date (gtt-kvp-str "start-date") "~d ~b ~Y"))))
                (lambda (key . args) 0)
        ))
        (define report-end
            (catch #t
                (lambda () (time-second (date->time-utc (string->date (gtt-kvp-str "end-date") "~d ~b ~Y"))))
                (lambda (key . args) 0)
        ))
    )))
)
(define total-reported-time 0)
?>
</head>
<body bgcolor="#c8c8d3">
<div id="gnotime-body">
<center>
<?scm
(define 
    (my-html-escape-newline str)
    (define (tail-escape-newline accum str)
        (let 
            ((noff (string-index str #\newline)))
            (if 
                (equal? #f noff) 
                (string-append accum str)
                (tail-escape-newline  
                        (string-append accum (substring str 0 noff) "<br />\n")
                    (string-tail str (+ noff 1))
                )
            )
        )
    )
    (tail-escape-newline "" str)
)

(define (seconds->human-readable sec type)
    (let (
            (days (quotient sec 28800))
            (hours-remain (quotient (remainder sec 28800) 3600))
            (hours-total (quotient sec 3600))
            (minutes (quotient (remainder sec 3600) 60))
        )
        (if
            (equal? type "day")
            (string-append (number->string days) "d " (number->string hours-remain) "h " (number->string minutes) "m: ")
            (string-append (number->string hours-total) "h " (number->string minutes) "m: ")
        )
    )
)

(define (task-reported-time task)
  (let (
        (intervals (filter (lambda (interval) 
                                   (and (> (gtt-interval-start interval) report-start) 
                                        (< (gtt-interval-start interval) report-end))) 
                           (gtt-intervals task)))
    )
    (apply +
        (map -
            (gtt-interval-stop intervals)
            (gtt-interval-start intervals)
        )
    )
  )
)

(define
    (project-reported-time project)
    (let (
            (current-project-time
                (apply
                    +
                    (map
                        (lambda (task)
                            (task-reported-time task)
                        )
                        (gtt-tasks project)
                    )
                )
            )
        )
        (begin
            (set! total-reported-time (+ total-reported-time current-project-time))
            current-project-time
        )
    )
)

; show only tasks with at least 5 minutes of logged time!
(define
    (reported-tasks project)
    (filter (lambda (task) (> (task-reported-time task) 300)) (gtt-tasks project))
)

; Returns rows consisting of project's task-notes to be reported
(define 
    (show-reported-tasks project)
    (map
        (lambda (task)
            (if (not (or
                        (equal? (gtt-task-notes task) "")
                        (equal? (gtt-task-notes task) "\n")
                ))
                (gtt-show
                    (string-append
                        "<tr><td bgcolor=#f8f8f8 >\n"
                        "<b>"
                        (gtt-task-memo task)
                        "</b><br />\n"
                        (my-html-escape-newline (gtt-task-notes task))
                            "\n</td></tr>\n"
                ))
            )
        )
        (reported-tasks project)
))

(define
    (show-reported-projects prjs prefix)
    (if (null? prjs)
        '()
        (map
            (lambda (proj)
                (list
                    ; Show only those tasks that racked up 5+ minutes of time...
                    (if (not (null? (reported-tasks proj)))
                        (list
                            (gtt-show 
                                (string-append
                                    "\n<tr><td bgcolor=#e0e0e0>\n"
                                    "<b>"
(if (equal? (gtt-kvp-str "show-sum-time") "yes")
                                    (if (equal? (gtt-kvp-str "interval") "daily")
                                        (seconds->human-readable (project-reported-time proj) "min")
                                        (seconds->human-readable (project-reported-time proj) "day")
                                    )
" ")
                                    " " prefix "/" (gtt-project-title proj) "</b> - " (gtt-project-desc proj) "\n"
                                    "<table width=100% border=0 cellspacing=4>\n"
                                )
                            )
                            (show-reported-tasks proj)
                            (gtt-show "</table>\n")
                            (gtt-show "</td></tr>\n")
                        )
                    )
                    (show-reported-projects (gtt-project-subprojects proj) (string-append prefix "/" (gtt-project-title proj)))
                )
            )
            prjs
        )
    )
)

?>
<table bgcolor="#c8c8d3" border=0 cellspacing=4>
<tr><td align=center>
<h2><?scm
(gtt-show 
    (if (equal? (gtt-kvp-str "interval") "daily")
        (string-append
            "Daily report for "
            (date->string (time-utc->date (make-time time-utc 0 report-start)) "~d ~b ~Y (~A)")
    )
    (if (equal? (gtt-kvp-str "interval") "monthly")
        (string-append
            "Monthly report for "
            (date->string (time-utc->date (make-time time-utc 0 report-start)) "~b ~Y")
        )
    (if (equal? (gtt-kvp-str "interval") "custom")
        (string-append
            "Report for "
            (date->string (time-utc->date (make-time time-utc 0 report-start)) "~d ~b ~Y")
            " - "
            (date->string (time-utc->date (make-time time-utc 0 report-end)) "~d ~b ~Y")
        )
    )))
)
?></h2>
</td></tr>
<?scm
(if (= report-start 0)
    (gtt-show 
        (string-append
            "<tr><td>\n"
            "<big>ERROR:</big> You have entered an invalid format for the start date: "
            (gtt-kvp-str "start-date")
            ".<br />\n"
            "Please use format like <b>\"5 Jul 2006\"</b>.\n"
            "</td></tr>\n"
        )
    )
    (if (= report-end 0)
    (gtt-show 
        (string-append
            "<tr><td>\n"
            "<big>ERROR:</big> You have entered an invalid format for the end date:"
            (gtt-kvp-str "end-date")
            ".<br />\n"
            "Please use format like <b>\"5 Jul 2006\"</b>.\n"
            "</td></tr>\n"
        )
    )

    ; No, don't show *all* projects; just the selected project and its children ...
    ; (show-reported-projects (gtt-projects) "")
    (show-reported-projects (list (gtt-linked-project)) "") 
))
?>
<?scm>
(if (equal? (gtt-kvp-str "show-sum-time") "yes")
    (begin
        (gtt-show "<tr><td bgcolor=#e0e0e0><h3>")
        (gtt-show (seconds->human-readable total-reported-time "day"))
        (gtt-show "TOTAL</h3></td></tr><tr><td align=right>* 1 day is equal to 8 hours</td></tr>")
    )
)
?>
</table>
</center>
</div>
</body>
</html>
