<html>
<head>
<title>Hello World!</title>
</head>
<body>
<h1>Custom Report Primer</h1>

<p>
You can design and use custom reports with GnoTime 
rather easily if you know a bit of basic HTML.   
If you also know scheme, then the world is at 
your feet, since the report generator uses guile 
to interpret the embedded scheme in a report template.
</p>
<p>
After designing your own report template, you can add it to 
GnoTime by picking the menu entry 
<b>'Reports' ... 'New Report'</b>
and entering the filename for the  template.
</p>
<p>
The report template consists of standard HTML markup
(including newer HTML features, such as CSS), with 
embedded scheme markup to provide project and diary display. 
GnoTime includes some built-in scheme primitives
for generating HTML tables for projects and diary entries. 
This page shows some examples; you can view the HTML source for
this example primer by viewing 'primer.ghtml' (probably installed
at <tt>/usr/share/gnotime/ghtml/C/primer.ghtml</tt>)
</p>
<p>
Some sample scheme forms, and their output:
</p>

<ul>
<li> <tt>(gtt-hello)</tt>  prints the following:
     <b><i><?scm  (gtt-hello) ?></i></b>
     <br><br>

<li> <tt>(gtt-show-project-title)</tt>  prints the following:
     <b><i><?scm  (gtt-show-project-title) ?></i></b>
     <br><br>

<li> <tt>(gtt-show-project-desc)</tt>  prints the following:
     <b><i><?scm  (gtt-show-project-desc) ?></i></b>
     <br><br>

<li> <tt>(gtt-show (gtt-project-notes (gtt-selected-project)))</tt>  
     prints the notes for the selected proejct, which are:
     <br><b><i>
     <?scm  (gtt-show (gtt-project-notes (gtt-selected-project))) ?>
     </i></b><br>
     Note the slightly more complicated form of the above: 
     <tt>gtt-selected-project</tt> denotes the project that is currently
     selected in the GnoTime main window.  <tt>gtt-project-notes</tt>
     is a function that takes a project as an argument, and returns the
     notes on that project.  <tt>gtt-show</tt> is a kind of 'print'
     statement (see below for more examples of <tt>gtt-show</tt>).
     <br><br>
	  Note also that there is a <tt>(gtt-linked-project)</tt>
	  which is the projected refered to in a link.  It is 
	  frequenctly the same as the selected project, but need not be.
     <br><br>

<li> <tt>(gtt-show-basic-journal)</tt>  prints a basic layout of the journal, 
     see <tt>journal.ghtml</tt> for an example.
     <br><br>

<li> <tt>(gtt-show-table)</tt>  prints a configurable table showing the 
     journal entries.  See <tt>bigtable.ghtml</tt> for an extended example. 
     <br><br>
     Here's a little example:
     <br><br>
     <tt>(gtt-show-table '($memo "blah blah memo" $billstatus "what's up
      duude" $billable "bulbous blort" 
      $billrate $value "da bucks" $bill_value))</tt>
     <br><br>
     will print: <br>
     <?scm (gtt-show-table '($memo "blah blah memo" 
                $billstatus "what's up duude" 
                $billable "bulbous blort" 
                $billrate $value "da bucks" $bill_value)) ?>
     <br><br>
<!-- 
<?scm (gtt-show-table '($memo $billable $billrate $task_time $value $bill_value 
$start_datime $stop_datime $elapsed $fuzz))  ?>
-->

<li> <tt>(gtt-show-invoice)</tt>  prints a configurable invoice, see 
     <tt>invoice.ghtml</tt> for an example.
     <br><br>

<li> The primitive <tt>gtt-show</tt> acts as the ghtml analog of the 
     scheme primitive <tt>display</tt>, in that it merely prints an expression. 
     It differs, however, in one important way: it omits parenthesis.
     Note that html markup does pass through:
     <br><br> 
     <tt>(gtt-show '(yabba dabba &lt;i&gt;do&lt;/i&gt; (&lt;b&gt;eh 
         duude&lt;/b&gt;)))</tt>  prints the following:
     <br>
     <?scm (gtt-show '(yabba dabba <i>do</i> (<b>eh duude</b>))) ?>
     <br><br>

<li> Scheme is a modern, advanced programming language, 
     based on the newest and most advanced programming principles 
     today.  Scheme resembles LISP, somewhat.  For example,
     <tt>(gtt-show (+ 2 2))</tt>  prints the following:
     <?scm (gtt-show (+ 2 2)) ?>
     <br><br>

<li> The primitive <tt>gtt-show</tt> can be used anywhere,
     such as this Leibniz series expression for Pi:
     <br><br>
     <tt>(define (pi-sum a b) (if (> a b) 0 
     <br> (+ (/ 1 (* a (+ a 2))) (pi-sum (+ a 4) b)) ))
     <br>
     <?scm (define (pi-sum a b) (if (> a b) 0 (+ (/ 1 (* a (+ a 2))) (pi-sum (+ a 4) b)) )) ?>
   
     (define (pi-approx) (gtt-show (* 8 (pi-sum 1 2000)) ))
     <br>
     <?scm (define (pi-approx) (gtt-show (* 8 (pi-sum 1 2000)) )) ?>
     (pi-approx)
     </tt>
     <br> <br>

     prints the following:
     <?scm (pi-approx) ?>
     <br><br>

<li> We have started implementing a way of getting the raw 
     project/task/interval data into scheme, but its rather
     incomplete at this time.
     However, some things do work, as below:
     <br><br>
     <tt>(gtt-projects)</tt> returns the tree of projects,
     which can be used with the getters: for example:
     <tt>(gtt-show (gtt-project-title (gtt-projects)))</tt>
     shows:
     <br><br>
     <b><i>
     <?scm (gtt-show (gtt-project-title (gtt-projects))) ?>
     </i></b>

     <br><br>
	  The following project attributes are supported:
	  <ul>
	  <li><tt>(gtt-project-title prj)</tt>:
	      <?scm (gtt-show (gtt-project-title (gtt-linked-project))) ?>
	  <li><tt>(gtt-project-title-link prj)</tt>:
	      <?scm (gtt-show (gtt-project-title-link (gtt-linked-project))) ?>
	  <li><tt>(gtt-project-desc prj)</tt>:
	      <?scm (gtt-show (gtt-project-desc (gtt-linked-project))) ?>
	  <li><tt>(gtt-project-notes prj)</tt>:
	      <?scm (gtt-show (gtt-project-notes (gtt-linked-project))) ?>
	  <li><tt>(gtt-project-urgency prj)</tt>:
	      <?scm (gtt-show (gtt-project-urgency (gtt-linked-project))) ?>
	  <li><tt>(gtt-project-importance prj)</tt>:
	      <?scm (gtt-show (gtt-project-importance (gtt-linked-project))) ?>
	  <li><tt>(gtt-project-status prj)</tt>:
	      <?scm (gtt-show (gtt-project-status (gtt-linked-project))) ?>
			
	  <li><tt>(gtt-project-estimated-start prj)</tt>:
	      <?scm (gtt-show (gtt-project-estimated-start (gtt-linked-project))) ?>
			<i>(seconds since January 1, 1970)</i>
	  <li><tt>(gtt-project-estimated-end prj)</tt>:
	      <?scm (gtt-show (gtt-project-estimated-end (gtt-linked-project))) ?>
			<i>(seconds since January 1, 1970)</i>
	  <li><tt>(gtt-project-due-date prj)</tt>:
	      <?scm (gtt-show (gtt-project-due-date (gtt-linked-project))) ?>
			<i>(seconds since January 1, 1970)</i>

	  <li><tt>(gtt-project-sizing prj)</tt>:
	      <?scm (gtt-show (gtt-project-sizing (gtt-linked-project))) ?>
			<i>(seconds)</i>
	  <li><tt>(gtt-project-percent-complete prj)</tt>:
	      <?scm (gtt-show (gtt-project-percent-complete (gtt-linked-project))) ?>
	  </ul>



</ul>

<p>
Thats all for now folks!

</body>
</html>
