AC_INIT(src)
AM_INIT_AUTOMAKE(gnotime, 2.2.1)

AC_PROG_INTLTOOL

AC_PROG_LIBTOOL

AM_CONFIG_HEADER(config.h)

AM_MAINTAINER_MODE

AC_ISC_POSIX
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_STDC_HEADERS
AC_PROG_YACC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET

GNOME_COMPILE_WARNINGS

AC_PATH_XTRA

dnl *****************************************
dnl Look for a portable way to reap zombie processes
dnl *****************************************
AC_CHECK_HEADER([signal.h], AC_DEFINE([HAVE_SIGNAL_H], [1], [Define to 1 if we have signal.h on our system.]),
	AC_ERROR([signal.h is needed to compile this program.]))

AC_CHECK_HEADERS([sys/wait.h])
if test x$ac_cv_header_wait_h != "x"; then
	AC_CHECK_FUNCS(waitpid)
	AC_CHECK_DECLS(WNOHANG,,,[#include<sys/wait.h>])

	dnl This causes RETSIGTYPE to contain a signal handler's return type.
	AC_TYPE_SIGNAL()
fi
AC_CHECK_DECLS(SA_NOCLDWAIT,,,[#include<signal.h>])

dnl *****************************************
dnl pkg-config check time
dnl *****************************************

LIBGNOME_REQUIRED=2.0.0
LIBGNOMEUI_REQUIRED=2.0.3
LIBGNOMEVFS_REQUIRED=2.0.0
LIBGLADE_REQUIRED=2.0.0
LIBGTKHTML_REQUIRED=3.0.0
LIBXML2_REQUIRED=2.0.0
SCROLLKEEPER_BUILD_REQUIRED=0.3.5
dnl Doesn't compile w/ qof-0.5.0
LIBQOF_REQUIRED_MIN=0.5.2
LIBQOF_REQUIRED_MAX=0.5.2


dnl *******************************
dnl Guile checks
dnl *******************************

# If nothing else works, then try the hard coded values ..
# GUILE_LIBS='-lguile -lsocket -lnsl -ldl'
# GUILE_LIBS='-lguile -lqthreads -lnsl -ldl'
# GUILE_LIBS='-lguile -lnsl -ldl'

# GUILE_FLAGS
# GUILE_LIBS="$GUILE_LDFLAGS"
# AC_SUBST(GUILE_INCS)
# AC_SUBST(GUILE_LIBS)

dnl   GUILE_FLAGS14 --- set flags for compiling and linking with Guile
dnl   or Guile14
dnl
dnl   This macro runs the `guile-config' script, installed with Guile,
dnl   to find out where Guile's header files and libraries are
dnl   installed.  It sets four variables, marked for substitution, as
dnl   by AC_SUBST.
dnl
dnl     GUILE --- path of guile interpreter
dnl
dnl     GUILE_PACKAGE --- name of guile interpreter.
dnl
dnl     GUILE_CFLAGS --- flags to pass to a C or C++ compiler to build
dnl             code that uses Guile header files.  This is almost
dnl             always just a -I flag.
dnl
dnl     GUILE_LDFLAGS --- flags to pass to the linker to link a
dnl             program against Guile.  This includes `-lguile' for
dnl             the Guile library itself, any libraries that Guile
dnl             itself requires (like -lqthreads), and so on.  It may
dnl             also include a -L flag to tell the compiler where to
dnl             find the libraries.
                                                                                

AC_DEFUN([GUILE_FLAGS14],[
  AC_PATH_PROG(GUILE,guile14)
  if test "$GUILE" != "" ; then
    GUILE_PACKAGE="guile14"
    GUILE_CFLAGS="`guile-config14 compile`"
    GUILE_LDFLAGS="`guile-config14 link`"
  else
    AC_MSG_RESULT(no)
    AC_PATH_PROG(GUILE,guile)
    if test "$GUILE" = "" ; then
      AC_MSG_ERROR([ 
        guile14 or guile required but not found. 
        guile  does not appear to be installed correctly.
        Perhaps you have not installed the guile development packages? 
      ])
    fi
    GUILE_PACKAGE="guile"
    GUILE_CFLAGS="`guile-config compile`"
    GUILE_LDFLAGS="`guile-config link`"
  fi
  AC_SUBST(GUILE)

  # AC_SUBST(GUILE_CFLAGS)
  # AC_SUBST(GUILE_LDFLAGS)

  GUILE_INC="$GUILE_CFLAGS"
  GUILE_LIBS="$GUILE_LDFLAGS"
  AC_SUBST(GUILE_INCS)
  AC_SUBST(GUILE_LIBS)
  AC_SUBST(GUILE_PACKAGE)
])

GUILE_FLAGS14

dnl *****************************************
dnl libgnome, libgnomeui needed for all utils
dnl *****************************************

PKG_CHECK_MODULES(GNOTIME, libgnome-2.0 >= $LIBGNOME_REQUIRED libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED)
AC_SUBST(GNOTIME_CFLAGS)
AC_SUBST(GNOTIME_LIBS)

AM_PATH_GLIB_2_0

dnl *****************************************
dnl need libglade
dnl *****************************************
PKG_CHECK_MODULES(LIBGLADE, libglade-2.0 >= $LIBGLADE_REQUIRED)
AC_SUBST(LIBGLADE_CFLAGS)
AC_SUBST(LIBGLADE_LIBS)

dnl *********************************************
dnl for anything which calls gconftool-2 correctly
dnl *********************************************


AC_PATH_PROG(GCONFTOOL, gconftool-2, no)

if test x"$GCONFTOOL" = xno; then
  AC_MSG_ERROR([gconftool-2 executable not found in your path - should be installed with GConf])
fi

dnl --- grr, if libgconf-devel not installed, this macro will fail
dnl --- but what should we check for?
AM_GCONF_SOURCE_2

dnl **************************************************************
dnl If QOF is found on the build system, then use it.
dnl **************************************************************

AC_ARG_WITH(system-qof,
AC_HELP_STRING([--with-system-qof],
[use installed libqof rather than the bundled one.  If not specified, configure will use the system qof if installed, otherwise its own.]),

[
if test x$withval = "xyes"; then
	PKG_CHECK_MODULES(LIBQOF, qof-0 >= $LIBQOF_REQUIRED_MIN qof-0 <= $LIBQOF_REQUIRED_MAX)
	qofbuild=no
else
	dnl Have to use static libqof instead of dynamic.
	AC_MSG_NOTICE([Using internal libqof])
	LIBQOF_CFLAGS='-I$(top_srcdir)/lib -I$(top_srcdir)/lib/qof'
	LIBQOF_LIBS='$(top_builddir)/lib/qof/libqof.la $(top_builddir)/lib/libqofsql/libqofsql.la'
	qofbuild=yes
fi
],
[
if $PKG_CONFIG --exists "qof-0 >= $LIBQOF_REQUIRED_MIN qof-0 <= $LIBQOF_REQUIRED_MAX"; then
	PKG_CHECK_MODULES(LIBQOF, qof-0 >= $LIBQOF_REQUIRED_MIN qof-0 <= $LIBQOF_REQUIRED_MAX)
	qofbuild=no
else
	dnl Have to use static libqof instead of dynamic
	AC_MSG_NOTICE([Using internal libqof])
	LIBQOF_CFLAGS='-I$(top_srcdir)/lib -I$(top_srcdir)/lib/qof'
	LIBQOF_LIBS='$(top_builddir)/lib/qof/libqof.la $(top_builddir)/lib/libqofsql/libqofsql.la'
	qofbuild=yes
fi
])

AC_SUBST(LIBQOF_CFLAGS)
AC_SUBST(LIBQOF_LIBS)

AM_CONDITIONAL(BUILD_QOF, [test x$qofbuild = xyes])

dnl *******************************
dnl Gnome VFS
dnl *******************************

PKG_CHECK_MODULES(LIBGNOMEVFS, gnome-vfs-2.0 >= $LIBGNOMEVFS_REQUIRED)
AC_SUBST(LIBGNOMEVFS_CFLAGS)
AC_SUBST(LIBGNOMEVFS_LIBS)


dnl *******************************
dnl gtkhtml -- use 3.1 if present, else use 3.0
dnl *******************************

for GTKHTMLVER in 3.6 3.5 3.4 3.2 3.1 3.0 ; do
  if $PKG_CONFIG --exists libgtkhtml-$GTKHTMLVER ; then
	PKG_CHECK_MODULES(LIBGTKHTML, libgtkhtml-$GTKHTMLVER >= $LIBGTKHTML_REQUIRED)
	break
  fi
done
AC_SUBST(LIBGTKHTML_CFLAGS)
AC_SUBST(LIBGTKHTML_LIBS)


dnl ********************
dnl libxml2
dnl The libxml2 library is required 
dnl ********************

PKG_CHECK_MODULES(LIBXML2, libxml-2.0 >= $LIBXML2_REQUIRED)
AC_SUBST(LIBXML2_CFLAGS)
AC_SUBST(LIBXML2_LIBS)

dnl *****************************
dnl scrollkeeper
dnl *****************************
dnl To substitute into the gnotime.spec
AC_SUBST(SCROLLKEEPER_BUILD_REQUIRED)
AC_PATH_PROG(SK_CONFIG, scrollkeeper-config,no)
if test x$SK_CONFIG = xno; then
	AC_MSG_ERROR(cannot find scrollkeeper-config.  In order to properly install the documentation please install the scrollkeeper package: http://scrollkeeper.sourceforge.net)
fi
AC_SUBST(SK_CONFIG)

dnl *****************************
dnl popt is needed 
dnl *****************************

# There is no popt under mac OSX but it still compiles ... 
# so remove this check so that Mac OSX can work.
#
# AC_CHECK_LIB(popt, poptHelpOptions,, AC_MSG_ERROR([popt is required to build gnome-utils. You can download the latest version from ftp://people.redhat.com/sopwith/popt/]))



dnl **************************************************************
dnl Checks for typedefs, structures, and compiler characteristics.
dnl **************************************************************

AC_C_CONST
AC_C_INLINE
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_STRUCT_ST_RDEV
AC_HEADER_TIME
AC_STRUCT_TM
AC_TYPE_UID_T

dnl *****************************
dnl Checks for library functions.
dnl *****************************

AC_FUNC_STRFTIME
AC_CHECK_FUNCS(getcwd gettimeofday getwd stpcpy strdup strtoul)
AC_REPLACE_FUNCS(strptime localtime_r)

dnl ************************************************
dnl X development libraries check
dnl ************************************************

if $PKG_CONFIG --exists pangoxft ; then
  PANGO_PACKAGES="pangox pangoxft"
else
  PANGO_PACKAGES="pangox"
fi

x_libs="`$PKG_CONFIG --libs $PANGO_PACKAGES`"
case x_libs in
  *-lX11*) pango_omitted_x_deps=no ;;
  *)       pango_omitted_x_deps=yes ;;
esac

if test $pango_omitted_x_deps = yes ; then
  AC_PATH_XTRA

  if test x$no_x = xyes ; then
    AC_MSG_ERROR([X development libraries not found])
  else
    X_LIBS="$X_PRE_LIBS $X_LIBS -lX11 $X_EXTRA_LIBS"
  fi
fi

AC_SUBST(X_LIBS)


dnl *******************************
dnl Internationalization
dnl ******************************* 

ALL_LINGUAS="az bg ca cs da de el en_GB es et eu fi fr ga gl hu it ja ko lt lv ms nl nn no pl pt pt_BR ro ru sk sl sv ta tr uk vi wa zh_CN zh_TW"
GETTEXT_PACKAGE=gnotime-2.0
AC_SUBST(GETTEXT_PACKAGE)
AM_GLIB_GNU_GETTEXT

# AM_GLIB_GNU_GETTEXT above substs $DATADIRNAME
# this is the directory where the *.{mo,gmo} files are installed
gnomeutilslocaledir='${prefix}/${DATADIRNAME}/locale'
AC_SUBST(gnomeutilslocaledir)

AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE",
		[Define the gettext package.])

AC_DEFINE_UNQUOTED(GNOME_ICONDIR, "${prefix}/share/pixmaps",
		[Define a gnome pixmaps directory.])

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

AC_OUTPUT([
Makefile
debian/Makefile
doc/C/Makefile
doc/C/man/Makefile
doc/Makefile
doc/es/Makefile
doc/eu/Makefile
gconf/Makefile
ghtml/C/Makefile
ghtml/Makefile
glade/Makefile
lib/Makefile
lib/qof/Makefile
lib/libqofsql/Makefile
po/Makefile.in
redhat/Makefile
redhat/gnotime.spec
fedora/Makefile
fedora/gnotime.spec
src/Makefile

])

dnl <= Configuration summary =>

echo ""
echo "gnotime configuration summary:"
echo "=================================="
echo ""

dnl <= CFLAGS and LDFLAGS =>
echo "CFLAGS : $CFLAGS"
echo "LDFLAGS : $LDFLAGS"
echo "X_LIBS : $X_LIBS"
echo "GUILE_LIBS : $GUILE_LIBS"
echo "LIBQOF_LIBS : $LIBQOF_LIBS"
echo "LIBQOF_CFLAGS : $LIBQOF_CFLAGS"
echo ""

dnl <= Prefixes =>
echo "prefix : $prefix"
# echo "sysconf dir : "`eval echo $sysconfdir`
echo "bin dir : "`eval echo $bindir`
# echo "sbin dir : "`eval echo $sbindir`
echo "data dir : "`eval echo $datadir`
echo ""


echo ""
dnl <= End of configuration summary =>
